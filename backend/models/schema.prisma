datasource db {
  provider          = "postgresql"
  url               = env("GSR_WEBSITE_DB_URL")
  shadowDatabaseUrl = env("GSR_SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model FSR {
  slug      String @unique
  name      String

  primaryColor   String
  secondaryColor String

  logo          String?

  // socials
  uforaUrl     String?
  facebookUrl  String?
  instagramUrl String?
  discordUrl   String?
  linkedinUrl  String?
  tiktokUrl    String?
  githubUrl    String?

  // References
  pages        Page[]
  media        Media[]
  userAdmins   UserAdmin[]
}

model User {
  id        String  @unique
  firstName String
  lastName  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userAdmins UserAdmin[]
}

model UserAdmin {
  userId     String
  user       User   @relation(fields: [userId], references: [id])

  fsrId      String
  fsr        FSR    @relation(fields: [fsrId], references: [slug])

  @@unique([userId, fsrId])
}

model Page {
  id        Int @id @default(autoincrement())
  
  title_nl  String
  path_nl   String

  title_en  String
  path_en   String

  fsrId     String
  fsr       FSR @relation(fields: [fsrId], references: [slug])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([fsrId, path_nl])
  @@unique([fsrId, path_en])
}

model Media {
  id       Int @id @default(autoincrement())

  name     String
  path     String @unique
  mimeType String

  deletedAt DateTime?
  
  fsrId    String
  fsr      FSR @relation(fields: [fsrId], references: [slug])
}